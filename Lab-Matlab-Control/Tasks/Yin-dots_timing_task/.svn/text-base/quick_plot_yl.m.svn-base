function quick_plot_yl(dat, alpha, beta, guess, lapse, ax, co)% function quick_plot(dat, alpha, beta, guess, lapse, ax, co)%% inputs:%   dat: dat(:,1) is stimulus intensity%        dat(:,2) is response (1 for correct, 0 for wrong)%% plots data & fitif nargin < 3  returnendif nargin < 4 || isempty(guess)    guess = 0.5;endif nargin < 5 || isempty(lapse)    lapse = 0;endif nargin < 6 || isempty(ax)  ax = axes;endif nargin < 7 || isempty(co)  co = 'k';end%axes(ax);cla reset; hold on;if max(dat(:,1)) > 1    minx = 2; %min(dat(dat(:,1)>0, 1));    maxx = max(dat(:, 1)); % 99else    minx = min(dat(dat(:,1)>0, 1));    maxx = max(dat(:, 1));end% set coh=0 to minp, just for plottingdat(dat(:,1)==0,1) = minx;% re-code data as pct correctif size(dat,2) < 3 || sum(dat(:,3)) == size(dat,1)    dat = quick_formatData(dat);end% plot the datafigure;plot(dat(:,1), dat(:,2), 'o', 'Color', co, ...    'MarkerSize', 4, 'markerFaceColor', co);hold on;% plot the fitxs = linspace(minx,maxx);plot(xs, quick_val(xs, alpha, beta, guess, lapse), '-', 'Color', co, ...    'lineWidth', 1);% plot lapse lineplot([minx maxx], (1-lapse).*[1 1], 'k--');set(ax, 'XScale', 'log', 'XLim', [minx maxx], 'YLim', [0.4 1.0], ...    'XTick', dat(:,1), 'XTickLabel', num2str(dat(:,1)))