function text_ = gXrandomContinuous_text

% text and lines for the continuous/gamepad task

% tick marks
n = 5;
maxDeg = 30;
maxEarn = 20;

% make log spacing for graphics and earnings
tickEarn = maxEarn-fliplr([0, (2.^(0:n-2))*maxEarn/(2.^(n-2))]);
tickDeg = (maxDeg*tickEarn/maxEarn) - maxDeg/2;

% #1 = randomly generated number
% #2 = subject's estimate of the "average"
% #3 = error between 1 and 2
% #4 = holder for randomly generated alpha value
% #5 = constant label for 3
% #6-? = lables for earnings tick marks
arg_dXtext = { ...
    'size',     num2cell([60, 60, 40, 1, 40, 30*ones(1,n)]), ...
    'string',   cat(2, {'', '0', '', 'start', 'last error'}, num2cell(tickEarn)),...
    'x',        num2cell([-16, -16, -6, 100 -15, tickDeg]), ...
    'y',        num2cell([5, -3, 13, 100 13 -1100*ones(1,n)]), ...
    'visible',  true, ...
    'color',    num2cell( ...
    [0 0 200; 255 255 0; 0 255 255; 0 0 0; 0 255 255;...
    repmat([192 0 0], n, 1)], 2)};

% #1 = randomly generated number
% #2 = subject's estimate of the "average"
% #3 = error between 1 and 2
% #4,5 = constant lines
% #6 growing bar for total session earnings
% #7-? = tick marks for possible session earnings
arg_dXline = { ...
    'x1',       num2cell([-15, -15, 0, -15, -15, tickDeg(1), tickDeg]), ...
    'y1',       num2cell([1, 0, .5, 2, -1, -1000.5, -1100*ones(1,n)]), ...
    'x2',       num2cell([-15, -15, 0, 15, 15, tickDeg(1), tickDeg]), ...
    'y2',       num2cell([2, -1, .5, 2, -1 -1000.5, -1000*ones(1,n)]), ...
    'visible',  true, ...
    'penWidth', num2cell([5, 5, 5, 3, 3, 20, 2*ones(1,n)]), ...
    'color',    num2cell( ...
    [0 0 255; 255 255 0; 0 255 255; 255 255 255; 255 255 255; ...
    0 192 0; ...
    repmat([192,0,0], n, 1)], 2)};

tony = {'current', false, true, true};
text_ = { ...
    'dXtext',  5+n,	tony,	arg_dXtext; ...
    'dXline',  6+n,	tony,	arg_dXline; ...
    };