function text_ = gXpupil_text

% Add image to flash




% text and lines for the continuous/gamepad task

% striped background texture
%sq=[1024./2, 1280./2]
off=1
sq=[1024, 1280]
high = 8;
low = 0;
mid = (high+low)./2.3;

arg_dXtexture = { ...
    'textureFunction',  'textureChecker',  ...
    ...'textureArgs',      {num2cell(sq), num2cell(sq./4)}, ...
    'textureArgs',      {num2cell(sq./2), num2cell(sq./8)}, ...
    'color',            low, ...
    'bgColor',          high, ...
    'visible',          {true, false}, ...
    'filterMode',       0, ...
    'w',                inf, ...
    'h',                inf};

frac=(256.*mid./20)
arg_dXimage = { ...
    'file',         'BWapple.bmp', ...
    'visible',      false, ...
    'color',        frac*[1 1 1]};


% tick marks
n = 5;
maxDeg = 30;
maxEarn = 24;

% make log spacing for graphics and earnings
tickEarn = maxEarn-fliplr([0, (2.^(0:n-2))*maxEarn/(2.^(n-2))]);
tickDeg = (maxDeg*tickEarn/maxEarn) - maxDeg/2;

% #1 = randomly generated number
% #2 = subject's estimate of the "average"
% #3 = error between 1 and 2
% #4 = holder for randomly generated alpha value
% #5-? = lables for earnings tick marks
gr = [1 1 1]*mid;
arg_dXtext = { ...
    'bold',     true, ...
    'size',     num2cell([80, 80, 80, 1, 40*ones(1,n), 1]), ...
    'string',   cat(2, {'', '0', '', 'start'}, num2cell(tickEarn), 0),...
    'x',        num2cell([-1.75, -1.75, -1.75, 100, tickDeg, 100]), ...
    'y',        num2cell([2, 0, -2, 100, -5*ones(1,n), 100]), ...
    'visible',  true, ...
    'color',    num2cell([gr; gr; gr; gr; repmat(gr, n, 1); gr], 2)};

% #1 = length of randomly generated number
% #2 = length of subject's estimate of the "average"
% #3 = length of error between 1 and 2
% #4 sliding tick mark for total session earnings
% #5-? = tick marks for possible session earnings
arg_dXline = { ...
    'x1',       num2cell([-15,  -15,    0,  tickDeg(1), tickDeg, -1.75, -.1]), ...
    'y1',       num2cell([1,    0,      .5, -4.55,      -5*ones(1,n), -2.1, 0]), ...
    'x2',       num2cell([-15,  -15,    0,	tickDeg(1), tickDeg, 1.75, .1]), ...
    'y2',       num2cell([1,    0,      .5, -4.55,    -4.1*ones(1,n), -2.1, 0]), ...
    'visible',  true, ...
    'penWidth', num2cell([10,   10,     10, 10,     2*ones(1,n), 5, 10]), ...
    'color',    num2cell([gr;   gr;     gr; gr;     repmat(gr, n, 1); gr; [1 1 1]], 2)};

static = {'current', false, true, true};
text_ = { ...
    'dXtext',  5+n,	static,	arg_dXtext; ...
    'dXline',  6+n,	static,	arg_dXline; ...
    'dXtexture', 2,	static,	arg_dXtexture; ...
    'dXimage',   1, static, arg_dXimage};