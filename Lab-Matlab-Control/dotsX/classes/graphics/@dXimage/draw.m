function i_ = draw(i_)%draw method for class dXimage: prepare graphics for display%   i_ = draw(i_)%%   All DotsX graphics classes have draw methods.  These prepare class%   instances for displaying graphics upon the next dXscreen 'flip'.%%   Updated class instances are always returned.%%----------Special comments-----------------------------------------------%-%%-% Overloaded draw method for class dXimage%-%%-% Note: this routine always returns the object%-% in case it was changed%----------Special comments-----------------------------------------------%%   See also draw dXimage% Copyright 2006 by Joshua I. Gold%   University of Pennsylvania% draw only visible objectsif length(i_) == 1    % avoid nasty "for" loop for single object    if i_.visible        % check for animation ... is so, possibly        %   increment image index        if i_.numImages > 1            % increment frame count            i_.frameCount = i_.frameCount + 1;            if(i_.frameCount) > i_.framesPerImage                % reset frame count                i_.frameCount = 1;                % increment image index                i_.index = i_.index+1;                if i_.index > i_.numImages                    i_.index = 1;                end            end        end        % draw it        if i_.useTextures            % draw (fast) using textures            Screen('DrawTexture', i_.windowNumber, ...                i_.textures(i_.index), i_.sourceRect, ...                i_.drawRects{i_.index}, i_.rotationAngle, ...                i_.filterMode, i_.globalAlpha);        else            % draw (slow) using images            Screen('PutImage', i_.windowNumber, ...                i_.images(i_.index), i_.drawRects{i_.index});        end    endelse    % slower for loop for multiple objects...    for ii = 1:length(i_)        % avoid nasty "for" loop for single object        if i_(ii).visible            % check for animation ... is so, possibly            %   increment image index            if i_(ii).numImages > 1                % increment frame count                i_(ii).frameCount = i_(ii).frameCount + 1;                if(i_(ii).frameCount) > i_(ii).framesPerImage                    % reset frame count                    i_(ii).frameCount = 1;                    % increment image index                    i_(ii).index = i_(ii).index+1;                    if i_(ii).index > i_(ii).numImages                        i_(ii).index = 1;                    end                end                ind = i_(ii).index;            else                ind = 1;            end            % draw it            if i_(ii).useTextures                % draw (fast) using textures                Screen('DrawTexture', i_(ii).windowNumber, ...                    i_(ii).textures(i_(1).index), i_(1).sourceRect, ...                    i_(ii).drawRects{i_(1).index}, i_(ii).rotationAngle, ...                    i_(ii).filterMode, i_(ii).globalAlpha);                % Screen('DrawTexture', i_(1).windowNumber, ...                %     i_(ii).textures(ind), i_(ii).sourceRect, ...                %     i_(ii).drawRects{ind}, i_(ii).rotationAngle, ...                %     i_(ii).filterMode, i_(ii).globalAlpha);                %                % Screen('DrawTexture', i_(ii).windowNumber, ...                %     i_(ii).textures(ind), [], i_(ii).sourceRect, ...                %    i_(ii).drawRects{ind}, i_(ii).filterMode, i_(ii).globalAlpha);            else                % draw (slow) using images                Screen('PutImage', i_(ii).windowNumber, ...                    double(i_(ii).images{ind}), i_(ii).drawRects{ind});            end        end    endend