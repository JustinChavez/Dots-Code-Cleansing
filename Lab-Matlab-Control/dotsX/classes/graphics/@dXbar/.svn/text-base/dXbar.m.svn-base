function [b_, attributes_, batchMethods_] = dXbar(num_objects)% function [b_, attributes_, batchMethods_] = dXbar(num_objects)%% Constructor method for class dXbar%% Arguments:%   num_objects    ... number of objects to create%% Returns:%   b_            ... array of created dXbar%   attributes_    ... default object attributes%   batchMethods_  ... methods that can be run in a batch (e.g., draw)% Copyright 2004 by Joshua I. Gold%   University of Pennsylvania% get screen attributes[wn, sr, ppd, fr] = rGraphicsGetScreenAttributes;        % default object attributesattributes = { ...        % name              type		ranges(?)	default        'ctrX',             'scalar',	[],			0;		... % pix or deg        'ctrY',             'scalar',	[],			0;		... % pix or deg        'w',                'scalar',	[],			3;      ... % pix or deg        'h',                'scalar',	[],			3;      ... % pix or deg        'rotation',         'scalar',   [],         0;      ... % clockwise degrees        'units',            'string',   {'pixels', 'degrees'}, 'degrees';        'color',            'array',	[],			[255,255,255,255];...        'visible',          'boolean',	[],			false;	...        'windowNumber',     'auto',     [],         wn;     ...        'screenRect',       'auto',     [],         sr        'pixelsPerDegree',  'auto',     [],         ppd;    ...        'frameRate',        'auto',     [],         fr;     ...        'texSide',          'auto',     [],         16;     ...        'texImage',         'auto',     [],         [];     ...        'texture',          'auto',     [],         nan;	...        'destinationRect',  'auto',     [],         []};% make an array of objects from structs made from the attributesl = cell2struct(attributes(:,4), attributes(:,1), 1);for i = 1:num_objects    b_(i) = class(l, 'dXbar');end% return the attributes, if necessaryif nargout > 1    attributes_ = attributes;endif nargout > 2    batchMethods_ = {'draw', 'blank'};end