function t_ = set(t_, varargin)%set method for class dXtext: specify property values and recompute dependencies%   t_ = set(t_, varargin)%%   All DotsX classes have set methods which allow properties for one or%   more instances to be specified, and dependent values recomputed.%%   Updated class instances are always returned.%%----------Special comments-----------------------------------------------%-%%-% Overloaded set method for class dXtext%-%%-% Assigns properties to dXtext object(s)%-% and returns the same (changed) objects%----------Special comments-----------------------------------------------%%   See also set dXtext% Copyright 2004 by Joshua I. Gold%   University of Pennsylvania% set the fields, one at a time.. no error checkingif length(t_) == 1    % set one object    for ii = 1:2:nargin-1        t_.(varargin{ii}) = varargin{ii+1};    endelse    % set many objects  ... a cell means separate    %   values given for each object; otherwise    %   the same value is set for all objects    inds=ones(size(t_));    for ii = 1:2:nargin-1        % change it        if iscell(varargin{ii+1}) && ~isempty(varargin{ii+1})            [t_.(varargin{ii})] = deal(varargin{ii+1}{:});        else            [t_.(varargin{ii})] = deal(varargin{ii+inds});        end    endendsr  = t_(1).screenRect([3 4])./2;ppd = t_(1).pixelsPerDegree;for ti = 1:length(t_)    t_(ti).visible  = logical(t_(ti).visible);    t_(ti).screen_x = sr(1) + t_(ti).x*ppd;    t_(ti).screen_y = sr(2) - t_(ti).y*ppd;    % resolve color pointer or lumanance to rgb triple    t_(ti).color = rGraphicsGetRGB(t_(ti).color);        % get smart about numbers    if isnumeric(t_(ti).string)        t_(ti).string = num2str(t_(ti).string);    endend