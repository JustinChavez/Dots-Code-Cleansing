function t_ = draw(t_)%draw method for class dXtarget: prepare graphics for display%   t_ = draw(t_)%%   All DotsX graphics classes have draw methods.  These prepare class%   instances for displaying graphics upon the next dXscreen 'flip'.%%   Updated class instances are always returned.%%----------Special comments-----------------------------------------------%-%%-% Overloaded draw method for class dXtarget%-%%-% Note: this routine always returns the object%-% in case it was changed%----------Special comments-----------------------------------------------%%   See also draw dXtarget% Copyright 2005 by Joshua I. Gold%   University of Pennsylvania%get realif t_(1).windowNumber <= 0    return;end% draw only visible objectsif length(t_) == 1    if t_.visible        % type 'Screen Targets?' for details. Draws all targets at once        % Screen('Targets', t_.windowNumber, ...        %     t_.cmd,...        %     clutX(t_.color), ...        %     t_.drawRect, ...        %     t_.penWidth);        % I Think we no longer should use our "Screen Targets' branch        % of PTB.  This switch statement may suffice as a replacement.  If        % not, we should add "Screen Targets" functionality to the real        % PTB, probably as part of the "Screen DrawDots" subcommand.        switch t_.cmd            case 0 % 0=fillOval                Screen('FillOval', t_.windowNumber, ...                    clutX(t_.color), ...                    t_.drawRect);            case 1 % 1=frameOval                Screen('FrameOval', t_.windowNumber, ...                    clutX(t_.color), ...                    t_.drawRect, ...                    t_.penWidth);            case 2 % 2=fillRect                Screen('FillRect', t_.windowNumber, ...                    clutX(t_.color), ...                    t_.drawRect);            case 3 % 3=frameRect                Screen('FrameRect', t_.windowNumber, ...                    clutX(t_.color), ...                    t_.drawRect, ...                    t_.penWidth);        end    endelse    Lshow = [t_.visible];    for ii = find(Lshow)        switch t_(ii).cmd            case 0 % 0=fillOval                Screen('FillOval', t_(ii).windowNumber, ...                    clutX(t_(ii).color), ...                    t_(ii).drawRect);            case 1 % 1=frameOval                Screen('FrameOval', t_(ii).windowNumber, ...                    clutX(t_(ii).color), ...                    t_(ii).drawRect, ...                    t_(ii).penWidth);            case 2 % 2=fillRect                Screen('FillRect', t_(ii).windowNumber, ...                    clutX(t_(ii).color), ...                    t_(ii).drawRect);            case 3 % 3=frameRect                Screen('FrameRect', t_(ii).windowNumber, ...                    clutX(t_(ii).color), ...                    t_(ii).drawRect, ...                    t_(ii).penWidth);        end    endend