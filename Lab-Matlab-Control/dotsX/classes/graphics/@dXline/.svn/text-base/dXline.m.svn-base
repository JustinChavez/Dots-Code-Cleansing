function [ls_, attributes_, batchMethods_] = dXline(num_objects)% function [ls_, attributes_, batchMethods_] = dXline(num_objects)%% Constructor method for class dXline%% Arguments:%   num_objects    ... number of objects to create%% Returns:%   ls_            ... array of created dXline%   attributes_    ... default object attributes%   batchMethods_  ... methods that can be run in a batch (e.g., draw)% Copyright 2004 by Joshua I. Gold%   University of Pennsylvania% get screen attributes[wn, sr, ppd, fr] = rGraphicsGetScreenAttributes;        % default object attributesattributes = { ...        % name              type		ranges(?)	default        'x1',               'scalar',	[],			0;		...        'y1',               'scalar',	[],			0;		...        'x2',               'scalar',	[],			0;		...        'y2',               'scalar',	[],			0;		...        'color',            'array',	[],			[0,255,0];...        'penWidth',         'scalar',   [],         1;      ...        'smooth',           'boolean',  [],         1;      ...        'visible',          'boolean',	[],			false;	...        'windowNumber',     'auto',     [],         wn;     ...        'screenRect',       'auto',     [],         sr;     ...        'pixelsPerDegree',  'auto',     [],         ppd;    ...        'frameRate',        'auto',     [],         fr;     ...        'pixPosition',      'auto',     []          [];     ...        'tag',              'auto',	    [],			0};         % ignored for now% make an array of objects from structs made from the attributesl = cell2struct(attributes(:,4), attributes(:,1), 1);for i = 1:num_objects    ls_(i) = class(l, 'dXline');end% return the attributes, if necessaryif nargout > 1    attributes_ = attributes;endif nargout > 2    batchMethods_ = {'draw', 'blank'};end