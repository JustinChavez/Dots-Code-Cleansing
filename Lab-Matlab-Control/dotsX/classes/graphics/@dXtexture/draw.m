function t_ = draw(t_)%draw method for class dXtexture: prepare graphics for display%   t_ = draw(t_)%%   All DotsX graphics classes have draw methods.  These prepare class%   instances for displaying graphics upon the next dXscreen 'flip'.%%   Updated class instances are always returned.%%----------Special comments-----------------------------------------------%-%%-% Overloaded draw method for class dXtexture%-% note: this routine always returns the object%-% in case it was changed%-%%----------Special comments-----------------------------------------------%%   See also draw dXtexture% Copyright 2007 by Benjamin Heasly%   University of Pennsylvania% loop through the visible objectsvti = find([t_.visible] & ([t_.windowNumber] > 0));if length(vti) == 1    % avoid the loop    % get image index    ii = t_(vti).imageIndex + 1;    lenii = length(t_(vti).imageIndices);    if ii > lenii        if t_(vti).continuous            ii = 1;        else            ii = lenii;        end    end    % cover the background with the color that should match the texture    if t_(vti).privateBackground        Screen('FillRect', t_(vti).windowNumber, clutX(t_(vti).bgColor));    end    % draw the texture where it belongs    % might fail with empty sourceRect    Screen('DrawTexture', t_(vti).windowNumber, t_(vti).textures(t_(vti).imageIndices(ii)), ...        t_(vti).sourceRect, t_(vti).drawRect, t_(vti).rotation, ...        t_(vti).filterMode, t_(vti).globalAlpha, clutX(t_(vti).modulateColor));    % update image index    t_(vti).imageIndex = ii;else    for ti = vti        % get image indexes (not same for all textures)        ii = t_(ti).imageIndex + 1;        lenii = length(t_(ti).imageIndices);        if ii > lenii            if t_(ti).continuous                ii = 1;            else                ii = lenii;            end        end        % cover the background with the color that should match the texture        if t_(ti).privateBackground            Screen('FillRect', t_(ti).windowNumber, clutX(t_(ti).bgColor));        end        % draw the texture where it belongs        % might fail with empty sourceRect        Screen('DrawTexture', t_(ti).windowNumber, t_(ti).textures(t_(ti).imageIndices(ii)), ...            t_(ti).sourceRect, t_(ti).drawRect, t_(ti).rotation, ...            t_(ti).filterMode, t_(ti).globalAlpha, (t_(ti).modulateColor));        % update image index        t_(ti).imageIndex = ii;    endend