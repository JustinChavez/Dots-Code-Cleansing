function [ts_, attributes_, batchMethods_] = dXcorner(num_objects)% function [ts_, attributes_, batchMethods_] = dXcorner(num_objects)%% Constructor method for class dXcorner ... draws a little%   spot in the corner of the screen%% Arguments:%   num_objects   ... number of objects to create%% Output:%   ts_           ... array of created dXcorners%   attributes_   ... default object attributes%   batchMethods_ ... methods that can be run in a batch (e.g., draw)% Copyright 2006 by Joshua I. Gold%   University of Pennsylvania% get screen attributes[wn, sr, ppd, fr] = rGraphicsGetScreenAttributes;% default object attributesattributes = { ...        % name              type		ranges(?)	default        'visible',          'boolean',	[],		false;	...        'location',         'scalar',	[],		4;      ... %1=topLeft,2=topRight,3=bottomRight,4=bottomLeft        'size',             'scalar',	[],		0.1;	...        'color',            'array',	[],		[1 1 1]*255; ...        'color2',           'array',    [],     [1 1 1]*128; ...        'colorState',       'auto',     [],     1;      ... % which color to show        'windowNumber',     'auto',     [],     wn;     ...        'screenRect',       'auto',     [],     sr;     ...        'pixelsPerDegree',  'auto',     [],     ppd;    ...        'drawRect',         'auto',		[],		[]; 	...        'frameRate',        'auto',     [],     fr;     ...        'tag',              'auto',	    [],		0};             % ignored% make an array of objects from structs made from the attributest = cell2struct(attributes(:,4), attributes(:,1), 1);for i = 1:num_objects    ts_(i) = class(t, 'dXcorner');end% return the attributes, if necessaryif nargout > 1    attributes_ = attributes;endif nargout > 2    batchMethods_ = {'draw', 'blank'};end