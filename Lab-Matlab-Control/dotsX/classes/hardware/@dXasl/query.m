function [a_, ret_, time_] = query(a_)% function [a_, ret_, time_] = query(a_)%% method to query dXasl object% note: this routine always returns the object% in case it was changed% Copyright 2005 by Joshua I. Gold%   University of Pennsylvania% check active flagif ~a_.active    ret_  = a_.default;    time_ = [];    returnendif a_.mouseMode && a_.showPlot && ~isempty(a_.ax)    % read last click position in figure window,    %   use senseless pupil diameter    drawnow    cp = get(a_.ax, 'CurrentPoint');    values = [nan, cp(1,1:2), nan];else    % read from the device    %   nx5 [pupil_diam, horz_gaxe, vert_gaze, frame_number, isBlinking]    values = as('read');    % check for input    if isempty(values)        ret_  = a_.default;        time_ = [];        return    end    % transform asl coordintaes to degrees of visual angle    values(:,2) = ...        (values(:,2)-a_.aslRect(1))*a_.degPercm(1) + a_.degreeRect(1);    values(:,3) = ...        (values(:,3)-a_.aslRect(2))*a_.degPercm(2) + a_.degreeRect(2);end% append history of read valuesa_.values = cat(1, a_.values, values);% possibly plot latest eye data.  Takes ~1-2ms to set data, then% let MATLAB redraw the plot during the next downtimeif a_.showPlot && ~isempty(a_.plt)    % mxx = max(values(:,2));    % mnx = min(values(:,2));    % mxy = max(values(:,3));    % mny = min(values(:,3));    % set(a_.plt, ...    %     'XData', [mnx, mnx, mxx, mxx], ...    %     'YData', [mny, mxy, mxy, mny]);    set(a_.plt, ...        'XData',    values(end,2),   ...        'YData',    values(end,3)    );end% possibly update the dX___ graphics object that is specified in a_.movePtr%   with latest eye data.  It may or may not be drawn elsewhere.%   a_.movePtr has the form {class_name, index}if ~isempty(a_.movePtr)    rSet(a_.movePtr{:}, 'x', values(end,2), 'y', values(end,3));end[a_, ret_, time_] = getJump(a_);